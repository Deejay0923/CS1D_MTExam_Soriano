const arr =;
const  = arr; // first = 1, second = 2

const numbers =;
const doubled = numbers.map(num => num * 2); // [2, 4, 6]

const numbers =;
const evens = numbers.filter(num => num % 2 === 0); // [2, 4]

const numbers =;
const sum = numbers.reduce((acc, num) => acc + num, 0); // 10

const fruits =;
const index = fruits.indexOf('banana'); // 1

const numbers =;
const found = numbers.find(num => num > 10); // 12

const fruits =;
const hasBanana = fruits.includes('banana'); // true

const numbers =;
numbers.sort(); //  (alphabetical order by default)

const numbers =;
numbers.sort((a, b) => a - b); // [1, 2, 5, 10]

const numbers =;
numbers.reverse(); // [3, 2, 1]

const numbers =;
numbers.forEach(num => console.log(num)); // 1, 2, 3

const numbers =;
const squares = numbers.map(num => num ** 2); // [1, 4, 9]

const numbers =;
const product = numbers.reduce((acc, num) => acc * num, 1); // 6

insertAt(value, index) {
    // Implementation to insert a node at a specific index
}

removeAt(index) {
    // Implementation to remove a node at a specific index
}

traverse() {
    let current = this.head;
    while (current) {
        console.log(current.data);
        current = current.next;
    }
}

class Stack {
    constructor() {
        this.items =;
    }
    push(item) {
        this.items.push(item);
    }
    pop() {
        return this.items.pop();
    }
    peek() {
        return this.items;
    }
}

class Queue {
    constructor() {
        this.items =;
    }
    enqueue(item) {
        this.items.push(item);
    }
    dequeue() {
        return this.items.shift();
    }
    peek() {
        return this.items;
    }
}

